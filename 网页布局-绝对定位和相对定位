说明：
占位空间：元素在文档流中所占据的空间；
物理空间：元素本身所占据的空间；
下面分三种情况分别对相对定位和绝对定位进行讨论：
1.只使用css第一组属性布局定位元素
2、只使用css第二组属性布局定位元素 
3、混合使用第一组和第二组属性的情况

一、用相对定位布局块级元素
 	元素设置position值：position：relative
 	此属性值的设置，元素没有脱离文档流，还是普通流定位模型的一部分，会对文档流中
 	其他元素布局产生影响。

 	相对于自身原有位置进行偏移
 	仍处于标准文档流中
 	随即拥有偏移属性和z-index属性
 	
 	1、仅使用left、right、top和bottom属性布局相对定位的情况
 	
 	2、仅使用margin属性布局相对定位元素的情况
 	用margin-bottom属性和margin-top属性设置负值可以改变文档流中所占空间的高度，会影响文档流中的其他元素的位置。其物理空间依旧存在，但占位空间为0
 	
 	3、混合使用left、right、top和bottom属性和margin属性布局相对定位元素的情况
 	此情况，它们的值会产生累加的效果。在css2.1中所有的浏览器都是用外边距边界来完成偏移计算。


二、用绝对定位布局块级元素
 	元素设置position值：position：absolute
 	此属性的设置，元素从文档流中完全删除。

 	建立了以包含块为基准的定位
 	完全脱离文档流
 	随即拥有偏移属性和z-index属性

 	1、仅使用left、right、top和bottom属性布局绝对定位元素的情况
 	绝对定位的元素的偏移位置以最近的定位（static、fixed、relative、absolute）祖先元素作为参照物。如果元素没有已定位的祖先元素，那么它的参照物为最顶级元素（由于浏览器的默认参照物不同，参照物可能是body或html元素）。
 	设置元素为绝对定位后，元素的left、right、top和bottom的默认属性值不是0，即当元素设置为绝对定位，但偏移属性均不为其赋值时，无论是否存在已定位祖先元素，都保持在初始位置，且脱离文档流。
 	注，IE下参照物需设置宽度或高度bottom和right属性才可以正确的定位。

 	2、仅使用margin属性布局绝对定位元素的情况
 	此情况，margin-bottom和margin-right的值不再对文档流中的元素产生影响，因为该元素已经脱离了文档流。另外，不管他的祖先元素有没有定位，都是以文档流中原来所在的位置上偏移参照物。
 	注：IE6下，元素前面没有兄弟节点，则margin-left的值会出现双倍边距。

 	3、混合使用left、right、top和bottom属性与margin属性布局相对定位元素的情况
 	
 	Ⅰ.margin属性和top、bottom、left、right属性同时使用，如果同一方向偏移，它们的值会产生累加的效果。

 	Ⅱ..绝对定位和相对定位的累加加效果不同，如果top、bottom、left、right属性和margin属性偏移的方向相反，top、bottom、left、right属性值有效，反方向的margin属性值无效。

总结： 

相对定位的元素不会脱离文档流，占用文档流的空间，Left、 Right、 Top和Bottom属性与margin属性混合使用会产生累加效果。 

绝对定位的元素脱离文档流，偏移不影响文档流中的其它元素，Left、Right、Top和Bottom属性与margin属性混合使用，偏移方向相同值累加，方向相反，margin属性值无效。 绝对定位的元素以最近的定位祖先元素为参照物。 

